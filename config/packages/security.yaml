security:
  enable_authenticator_manager: true
  hide_user_not_found: false
  role_hierarchy:
    ROLE_ADMIN: [ROLE_ANSWER_ADMIN, ROLE_USER_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    ROLE_HUMAN_RESOURCES: [ROLE_USER_ADMIN]
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      lazy: true
      provider: app_user_provider
      entry_point: form_login
      custom_authenticator:
        # - App\Security\LoginFormAuthenticator
        - App\Security\DummyAuthenticator
      form_login:
        login_path: app_login
        check_path: app_login
        username_parameter: email
        password_parameter: password
        enable_csrf: true

      two_factor:
        auth_form_path: /2fa_login
        check_path: /2fa_login_check
      logout: true

      switch_user: true

      login_throttling: true

      remember_me:
        secret: '%kernel.secret%'
        always_remember_me: true
        signature_properties: [password]

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#the-firewall

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
  # This makes the logout route accessible during two-factor authentication. Allows the user to
  # cancel two-factor authentication, if they need to.
  - { path: ^/logout, role: PUBLIC_ACCESS }
  # This ensures that the form can only be accessed when two-factor authentication is in progress.
  - { path: ^/2fa, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }
  - { path: ^/admin/login, roles: PUBLIC_ACCESS }
  - { path: ^/admin, roles: ROLE_ADMIN }
  # - { path: ^/profile, roles: ROLE_USER }
